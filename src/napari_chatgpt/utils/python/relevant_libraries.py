def get_all_signal_processing_related_packages():
    # Since the list was generated by ChatGPT 4, we first remove duplicates from the list:
    """
    Return a deduplicated list of Python package names related to signal processing.
    
    The returned list includes packages for audio, image, and signal processing, as well as related domains such as machine learning, visualization, and scientific computing.
    Returns:
        list: Unique package names relevant to signal processing and associated fields.
    """
    list_of_signal_processing_related_packages = list(
        set(_signal_processing_related_packages)
    )

    return list_of_signal_processing_related_packages


def get_all_essential_packages():
    # Since the list was generated by ChatGPT 4, we first remove duplicates from the list:
    """
    Return a deduplicated list of essential Python package names for scientific computing, data analysis, machine learning, and related domains.
    """
    list_of_essential_packages = list(set(_essential_packages))

    return list_of_essential_packages


def get_all_relevant_packages():
    # Since the list was generated by ChatGPT 4, we first remove duplicates from the list:
    """
    Return a deduplicated list of all relevant Python package names from both essential and signal processing domains.
    
    Combines the essential and signal processing-related package lists, removes duplicates, and returns the result.
    Returns:
        list: A list of unique package names as strings.
    """
    list_of_relevant_packages = list(
        set(_essential_packages + _signal_processing_related_packages)
    )

    return list_of_relevant_packages


_essential_packages = [
    "numpy",  # Fundamental package for numerical computations
    "pandas",  # Data analysis and manipulation library
    "matplotlib",  # Plotting library
    "scipy",  # Scientific computing and technical computing
    "scikit-learn",  # Machine learning library
    "tensorflow",  # Comprehensive machine learning library
    "pytorch",  # Deep learning library
    "keras",  # High-level neural networks API running on top of TensorFlow
    "opencv-python",  # OpenCV library for computer vision tasks
    "pillow",  # Image manipulation library
    "dask",  # Parallel computing library
    "xarray",  # Handling labeled multi-dimensional arrays
    "plotly",  # Interactive graphing library
    "seaborn",  # Statistical data visualization based on matplotlib
    "fastai",  # Simplified training of fast and accurate neural nets
    "scikit-image",  # Image processing routines for SciPy
    "imageio",  # Library for reading and writing a wide range of image data
    "pydicom",  # Reading and writing DICOM files
    "h5py",  # Interface to the HDF5 binary data format
    "numba",  # JIT compiler that translates a subset of Python and NumPy code into fast machine code
    "networkx",  # Creation, manipulation, and study of complex networks
    "dash",  # Web application library for Python
    "flask",  # Micro web framework for building web applications
    "streamlit",  # Turns data scripts into shareable web apps in minutes
    "requests",  # HTTP library for Python
    "beautifulsoup4",  # Library for pulling data out of HTML and XML files
    "pytest",  # Framework for writing small tests
    "selenium",  # Tool for web browser automation
    "jupyter",  # Interactive computing and notebooks
    "sqlalchemy",  # SQL toolkit and Object-Relational Mapping (ORM) library
]

_signal_processing_related_packages = [
    "numpy",  # Fundamental package for numerical computations
    "scipy",  # Used for scientific computing and technical computing
    "matplotlib",  # Plotting library
    "pillow",  # Fork of PIL (Python Imaging Library) for image manipulation
    "opencv-python",  # OpenCV library for computer vision tasks
    "scikit-image",  # Image processing routines for SciPy
    "imageio",  # Library for reading and writing a wide range of image data
    "mahotas",  # Computer vision and image processing library
    "pytesseract",  # Optical character recognition (OCR) tool
    "simpleitk",  # Simplified interface to the Insight Segmentation and Registration Toolkit (ITK)
    "itk",  # Insight Segmentation and Registration Toolkit for image analysis
    "vtk",  # The Visualization Toolkit for 3D computer graphics, image processing, and visualization
    "pydicom",  # Reading and writing DICOM files
    "scikit-learn",  # Machine learning library that includes some image processing functions
    "tensorflow",  # Comprehensive machine learning library that includes image processing functions
    "keras",  # High-level neural networks API running on top of TensorFlow
    "pytorch",  # Deep learning library that includes image processing functions
    "torchvision",
    # Package consisting of popular datasets, model architectures, and common image transformations for computer vision
    "dlib",  # Toolkit for making real world machine learning and data analysis applications
    "pywavelets",  # Wavelet Transform library
    "scipy.signal",  # Signal processing toolbox in SciPy
    "librosa",  # Library for audio and music analysis
    "spleeter",  # Library for audio source separation
    "audioread",  # Cross-library (GStreamer + Core Audio + MAD + FFmpeg) audio decoding
    "soundfile",  # Library to read and write sound files
    "wave",  # Standard library module for reading and writing WAV files
    "pyaudio",  # PortAudio library bindings for audio I/O
    "matplotlib",  # Also used for plotting signals
    "seaborn"  # Statistical data visualization library based on matplotlib, can be used to visualize signals
    "numpy",  # Fundamental package for numerical computations
    "scipy",  # Used for scientific computing and technical computing
    "matplotlib",  # Plotting library
    "pillow",  # Fork of PIL (Python Imaging Library) for image manipulation
    "opencv-python",  # OpenCV library for computer vision tasks
    "scikit-image",  # Image processing routines for SciPy
    "imageio",  # Library for reading and writing a wide range of image data
    "mahotas",  # Computer vision and image processing library
    "pytesseract",  # Optical character recognition (OCR) tool
    "simpleitk",  # Simplified interface to the Insight Segmentation and Registration Toolkit (ITK)
    "itk",  # Insight Segmentation and Registration Toolkit for image analysis
    "vtk",  # The Visualization Toolkit for 3D computer graphics, image processing, and visualization
    "pydicom",  # Reading and writing DICOM files
    "scikit-learn",  # Machine learning library that includes some image processing functions
    "tensorflow",  # Comprehensive machine learning library that includes image processing functions
    "keras",  # High-level neural networks API running on top of TensorFlow
    "pytorch",  # Deep learning library that includes image processing functions
    "torchvision",
    # Package consisting of popular datasets, model architectures, and common image transformations for computer vision
    "dlib",  # Toolkit for making real world machine learning and data analysis applications
    "pywavelets",  # Wavelet Transform library
    "scipy.signal",  # Signal processing toolbox in SciPy
    "librosa",  # Library for audio and music analysis
    "spleeter",  # Library for audio source separation
    "audioread",  # Cross-library (GStreamer + Core Audio + MAD + FFmpeg) audio decoding
    "soundfile",  # Library to read and write sound files
    "wave",  # Standard library module for reading and writing WAV files
    "pyaudio",  # PortAudio library bindings for audio I/O
    "matplotlib",  # Also used for plotting signals
    "seaborn",  # Statistical data visualization library based on matplotlib, can be used to visualize signals
    "numba",  # JIT compiler that translates a subset of Python and NumPy code into fast machine code
    "cupy",  # NumPy-like API for GPU-accelerated computing
    "nibabel",  # Access a multitude of neuroimaging data formats
    "pandas",  # Data analysis and manipulation library, useful for handling large data sets
    "h5py",  # Interface to the HDF5 binary data format
    "zarr",  # Scalable chunked, compressed, N-dimensional arrays
    "pyopencl",  # Python wrapper for OpenCL, useful for GPU computing
    "pycuda",  # Python wrapper for Nvidia CUDA
    "faiss",  # Library for efficient similarity search and clustering of dense vectors
    "skimage",  # Collection of algorithms for image processing in scikit-image
    "astropy",  # Astronomy and astrophysics library, contains some image processing tools for FITS files
    "gdal",  # Translator library for raster and vector geospatial data formats
    "rasterio",  # Access to geospatial raster data
    "pyproj",  # Cartographic projections and coordinate transformations library
    "shapely",  # Manipulation and analysis of geometric objects
    "geopandas",  # Geospatial data in Python made easier, builds on pandas
    "xarray",  # Handling labeled multi-dimensional arrays
    "netCDF4",  # Interface to the netCDF C library
    "salem",
    # Adds geolocalised subsetting, masking, and plotting operations to xarrayâ€™s data structures via access to geopandas
    "cartopy",  # Geospatial data processing in order to produce maps and other geospatial data analyses
    "pyfftw",  # Wrapper around FFTW, the speedy FFT library
    "mne",  # For processing electrophysiological data (EEG, MEG)
    "pyqtgraph",  # Graphics and GUI library for scientific applications
    "dash",  # Web application library for Python, useful for interactive signal/image analysis applications
    "bokeh",  # Interactive visualization library that targets modern web browsers for presentation
    "plotly",  # Graphing library that makes interactive, publication-quality graphs online
    "altair",  # Declarative statistical visualization library for Python
    "holoviews",  # High-level building blocks for building complex visualizations easily
    "panel",  # High-level app and dashboarding solution for Python
    "datashader",
    # Graphics pipeline system for creating meaningful representations of large datasets quickly and flexibly
    "bqplot",  # Grammar of graphics-based interactive visualization framework for Jupyter notebooks
    "ipywidgets",  # Interactive HTML widgets for Jupyter notebooks and the IPython kernel
    "vispy",  # High-performance interactive 2D/3D data visualization library
    "mayavi",  # 3D scientific data visualization and plotting in Python
    "glumpy",  # OpenGL-based interactive visualization library
    "PyOpenGL",  # Cross-platform Python binding to OpenGL and related APIs
    "meshio",  # I/O for various mesh formats
    "trimesh",  # Import/export, process, analyze and view triangular meshes
    "pyvista",  # 3D plotting and mesh analysis through a streamlined interface for the Visualization Toolkit (VTK)
    "laspy",  # Python library for reading, modifying and writing LAS files (Lidar data)
    "pdal",  # Python library for translating and manipulating point cloud data
    "opencv-contrib-python",  # Unofficial pre-built OpenCV packages for Python including the contrib modules
    "imgaug",  # Library for image augmentation in machine learning experiments
    "albumentations",  # Fast and flexible image augmentations
    "pytorch-lightning",  # The lightweight PyTorch wrapper for high-performance AI research
    "fastai",  # Simplified training of fast and accurate neural nets using modern best practices
    "mmcv",  # Multimedia computing, computer vision and deep learning library
    "mmdetection",  # OpenMMLab detection toolbox and benchmark
    "detectron2",  # FAIR's next-generation platform for object detection and segmentation
    "pymesh",  # Geometry processing library for Python
    "pyntcloud",  # Library for managing 3D point clouds
    "open3d",  # Modern library for 3D data processing
    "pylops",  # Python Linear Operators for high-level coding of linear algebra algorithms in seismic and beyond
    "pyroomacoustics",  # Package for audio room simulation and array processing algorithms
    "essentia",  # Library for audio and music analysis, description and synthesis
    "mir_eval",  # Transparent implementation of common MIR metrics
    "madmom",  # Audio signal processing library focused on MIR tasks
    "spleeter",  # Library for audio source separation
    "torch-audio",  # PyTorch tools for audio processing
    "tensorflow-io",  # TensorFlow I/O, including audio and other file formats
    "sox",  # Swiss army knife of sound processing, wrapped in Python
    "pydub",  # Manipulate audio with a simple and easy high level interface
    "waveform-analysis",  # Tools for waveform analysis/synthesis
    "speechpy",  # Library for speech processing and recognition
    "vosk",  # Speech recognition toolkit
    "deepspeech",  # Open Source Speech Recognition Engine based on deep learning
    "espnet",  # End-to-End Speech Processing Toolkit
    "kaldi",  # Speech recognition research toolkit
    "praat-parselmouth",  # Python interface to Praat for doing phonetics by computer
    "julius",
    # High-performance, two-pass large vocabulary continuous speech recognition (LVCSR) decoder software for speech-related researchers and developers
    "flask",  # Micro web framework for building web applications, useful for deploying models
    "django",
    # High-level Python web framework that encourages rapid development and clean, pragmatic design, useful for deploying models
    "tornado",  # Python web framework and asynchronous networking library, originally developed at FriendFeed
    "fastapi",
    # A modern, fast (high-performance) web framework for building APIs with Python 3.7+ based on standard Python type hints
    "starlette",
    # A lightweight ASGI framework/toolkit, which is ideal for building high performance asyncio services
    "uvicorn",  # A lightning-fast ASGI server, built on uvloop and httptools
    "gunicorn",
    # A Python WSGI HTTP Server for UNIX, a perfect partner for frameworks like Flask and Django in production
    "aiohttp",  # Asynchronous HTTP client/server framework for asyncio and Python
    "requests",  # Elegant and simple HTTP library for Python, built for human beings
    "httpx",  # A fully featured HTTP client for Python 3, which provides sync and async APIs
    "beautifulsoup4",
    # Library for pulling data out of HTML and XML files, useful for web scraping related to data collection for analysis
    "lxml",  # Powerful and Pythonic XML processing library combining libxml2/libxslt with the ElementTree API
    "pyquery",  # A jQuery-like library for parsing HTML, allowing you to make jQuery queries on XML documents
    "selenium",
    # An umbrella project encapsulating a variety of tools and libraries enabling web browser automation
    "scrapy",
    # An open source and collaborative framework for extracting the data you need from websites in a fast, simple, yet extensible way
    "mechanize",  # Stateful programmatic web browsing in Python
    "pyspark",  # Apache Spark Python API, enables scalable analysis and ML pipelines
    "dask",  # Parallel computing library that scales the existing Python ecosystem
    "ray",  # A framework that provides a simple, universal API for building distributed applications
    "modin",  # Speed up your Pandas workflows by changing a single line of code
    "vaex",
    # A Python library for lazy Out-of-Core DataFrames (similar to Pandas), to visualize and explore big tabular datasets
    "datatable",  # A library for efficient manipulation of large datasets, inspired by R's data.table package
    "polars",  # A blazingly-fast DataFrames library implemented in Rust, with bindings for Python
    "numexpr",  # Fast numerical expression evaluator for NumPy, which can significantly speed up certain operations
    "bottleneck",  # A collection of fast NumPy array functions written in C
    "joblib",  # A set of tools to provide lightweight pipelining in Python
    "nltk",
    # Natural Language Toolkit, a leading platform for building Python programs to work with human language data
    "spacy",  # Industrial-strength Natural Language Processing (NLP) with Python and Cython
    "gensim",  # Python library for topic modelling, document indexing, and similarity retrieval with large corpora
    "transformers",  # State-of-the-art Natural Language Processing for Pytorch, TensorFlow, and JAX
    "flair",  # A very simple framework for state-of-the-art Natural Language Processing (NLP)
    "stanza",  # A Python NLP Library for Many Human Languages
    "snorkel",  # A system for quickly generating training data with weak supervision
    "textblob",  # Simplified text processing for Python
    "pytorch-geometric",  # A geometric deep learning extension library for PyTorch
    "networkx",
    # A Python package for the creation, manipulation, and study of the structure, dynamics, and functions of complex networks
    "igraph",
    # A collection of network analysis tools with the emphasis on efficiency, portability, and ease of use
    "graph-tool",
    # An efficient Python module for manipulation and statistical analysis of graphs (a.k.a. networks)
    "snap.py",
    # A Python interface for SNAP (Stanford Network Analysis Platform), a general purpose, high performance system for analysis and manipulation of large networks
    "neo4j",  # Python driver for Neo4j, a graph database
    "gremlinpython",  # Python driver for Apache TinkerPopâ„¢, a graph computing framework
    "sqlalchemy",  # The Python SQL Toolkit and Object Relational Mapper
    "peewee",  # A small, expressive ORM -- supports PostgreSQL, MySQL, and SQLite
    "django-orm",  # Django's object-relational mapper; part of the Django web framework
    "pony",  # Pony Object Relational Mapper for Python
    "arrow",
    # Provides a sensible, human-friendly approach to creating, manipulating, formatting, and converting dates, times, and timestamps
    "pendulum",  # Python datetimes made easy: simplifies datetime manipulation
    "dateutil",  # Provides powerful extensions to the standard datetime module
    "pytz",  # World timezone definitions, modern and historical. Brings the Olson tz database into Python
    "tzlocal",  # A Python module that tries to figure out what your local timezone is
    "fiona",  # For reading and writing spatial data files
    "shapely",  # Manipulation and analysis of planar geometric objects
    "geopy",  # Python Geocoding Toolbox
    "pyproj",  # Python interface to PROJ (cartographic projections and coordinate transformations library)
    "rasterio",  # Direct raster I/O for Python programmers who use Numpy
    "geopandas",  # Extends Pandas to allow spatial operations on geometric types
    "folium",  # Makes it easy to visualize data thatâ€™s been manipulated in Python on an interactive leaflet map
    "pyshp",  # Pure Python read/write support for ESRI Shapefile format
    "osmnx",  # Retrieve, model, analyze, and visualize street networks from OpenStreetMap
    "contextily",  # Add background tiles to your matplotlib figures
    "mapboxgl",  # Python interface to Mapbox GL JS for creating interactive and customizable maps
    "datashader",  # Turns even the largest datasets into images, accurately
    "holoviz",  # High-level tools to simplify visualization in Python
    "hvplot",  # A high-level plotting API for the PyData ecosystem built on HoloViews
    "geoviews",  # Makes it easy to explore and visualize any data that includes geographic locations
    "cartopy",
    # Designed for geospatial data processing in order to produce maps and other geospatial data analyses
    "pydeck",  # 2D and 3D mapping in Python
    "keplergl",
    # A Python module for Kepler.gl, a powerful open source geospatial analysis tool for large-scale data sets
    "yellowbrick",  # Visual analysis and diagnostic tools to facilitate machine learning model selection
    "eli5",  # A library for debugging/inspecting machine learning classifiers and explaining their predictions
    "lime",  # Explaining the predictions of any machine learning classifier
    "shap",  # A game theoretic approach to explain the output of any machine learning model
    "interpret",  # A library for training interpretable models and explaining blackbox systems
    "fairlearn",  # A library that helps to assess and improve fairness of machine learning models
    "aif360",
    # The AI Fairness 360 toolkit is an open-source library to help detect and mitigate bias in machine learning models
    "tensorflow-federated",
    # An open-source framework for machine learning and other computations on decentralized data
    "pytorch-fairseq",
    # A sequence modeling toolkit that allows researchers and developers to train custom models for translation, summarization, language modeling, and other text generation tasks
    "allennlp",  # An open-source NLP research library, built on PyTorch
    "nilearn",  # A library for fast and easy statistical learning on NeuroImaging data
    "nibabel",  # Access a multitude of neuroimaging data formats
    "brainiak",  # Brain Imaging Analysis Kit: a package for advanced fMRI analysis
    "mne",  # MNE-Python: Magnetoencephalography (MEG) and Electroencephalography (EEG) data analysis
    "surprise",  # A Python scikit for building and analyzing recommender systems
    "lightfm",  # A Python implementation of a number of popular recommendation algorithms
    "spotipy",  # A lightweight Python library for the Spotify Web API
    "pyecharts",  # A Python library to generate Echarts plots
    "plotnine",  # A grammar of graphics for Python based on ggplot2
    "ggplot",  # Same as above, but a different implementation, also based on ggplot2
    "leather",
    # Leather is the Python charting library for those who need charts now and donâ€™t care if theyâ€™re perfect
    "mplfinance",  # Financial Markets Data Visualization using Matplotlib
    "backtrader",  # Python Backtesting library for trading strategies
    "quantlib-python",
    # Python bindings for the QuantLib library for modeling, trading, and risk management in real-life
    "ta-lib",  # Technical Analysis Library in Python
    "zipline",  # A Pythonic algorithmic trading library
    "alphalens",  # Performance analysis of predictive (alpha) stock factors
    "pyfolio",  # Portfolio and risk analytics in Python
    "empyrical",  # Common financial risk and performance metrics
    "finplot",  # Real-time financial plotting library
    "ccxt",  # Cryptocurrency exchange trading library for Python
    "yfinance",  # Yahoo! Finance market data downloader
    "pandas-datareader",  # Remote data access for pandas, works for multiple data sources
    "quandl",  # Quandl API access
    "deap",  # Distributed Evolutionary Algorithms in Python
    "tpot",  # Tree-based Pipeline Optimization Tool, using genetic algorithms
    "hyperopt",  # Distributed Asynchronous Hyperparameter Optimization
    "optuna",
    # An automatic hyperparameter optimization software framework, particularly designed for machine learning
    "ray[tune]",
    # A fast and simple framework for building and running distributed applications and includes a powerful library for hyperparameter tuning
    "skopt",  # Bayesian optimization over real valued parameter spaces
    "nevergrad",  # A gradient-free optimization platform
    "pyomo",
    # Python Optimization Modeling Objects (Pyomo) is a Python-based open-source optimization modeling language
    "pulp",  # An LP/MIP (Linear Programming/Mixed Integer Programming) solver
    "cvxpy",  # A Python-embedded modeling language for convex optimization problems
    "scs",  # Splitting conic solver, for solving large-scale convex cone problems
    "ecos",  # Embedded conic solver, for convex optimization problems
    "gurobipy",  # Gurobi optimizer via its Python API
    "coin-or-cbc",  # COIN-OR branch and cut solver, an open-source mixed integer programming solver
    "glpk",
    # GNU Linear Programming Kit, for solving large-scale linear programming (LP), mixed integer programming (MIP), and other related problems
    "or-tools",
    # Google's software suite for combinatorial optimization, capable of solving large-scale optimization problems
    "networkx",
    # For the creation, manipulation, and study of the structure, dynamics, and functions of complex networks
    "igraph",  # Network analysis and visualization
    "graph-tool",  # Efficient network analysis
    "snap",  # Stanford Network Analysis Platform for large network analysis
    "nxviz",  # Visualization package for NetworkX
    "pygraphviz",  # Interface to Graphviz for graph drawing
    "graphviz",  # Simple Python interface for Graphviz
    "pydot",  # Python interface to Graphviz's Dot language
    "fastprogress",
    # A fast and simple progress bar for Jupyter Notebook and console
    "pytorch-ignite",
    # A high-level library to help with training neural networks in PyTorch
    "catalyst",  # A PyTorch framework for accelerated deep learning R&D
    "flask-restful",
    # Extension for Flask that adds support for quickly building REST APIs
    "marshmallow",
    # A lightweight library for converting complex data types to and from native Python datatypes
    "streamlit",  # Turns data scripts into shareable web apps in minutes
    "dash-cytoscape",
    # Interactive network visualization in Python (Dash component)
    "plotly-express",
    # A terse, consistent, high-level API for rapid data exploration and figure generation with Plotly
    "py2neo",  # A comprehensive Neo4j driver library and toolkit for Python
    "scikit-optimize",
    # Sequential model-based optimization with a scipy.optimize interface
    "pycaret",
    # An open-source, low-code machine learning library in Python that automates machine learning workflows
    "featuretools",
    # An open-source framework for automated feature engineering
    "mlflow",  # An open-source platform for the machine learning lifecycle
    "dvc",  # Data Version Control - Git for data & models
    "great-expectations",  # Always know what to expect from your data
    "airflow",  # Programmatically author, schedule, and monitor data pipelines
    "prefect",  # The new standard in data workflow automation
    "kedro",
    # A framework for creating reproducible, maintainable, and modular data science code
    "xgboost",  # An optimized distributed gradient boosting library
    "lightgbm",
    # A fast, distributed, high-performance gradient boosting (GBDT, GBRT, GBM, or MART) framework
    "catboost",
    # An open-source gradient boosting on decision trees library with categorical features support
    "sentence-transformers",  # Sentence Embeddings with BERT & Co
    "faiss-gpu",
    # GPU support for FAISS, a library for efficient similarity search and clustering of dense vectors
    "tensorflow-probability",
    # Probabilistic reasoning and statistical analysis in TensorFlow
    "keras-tuner",
    # An easy-to-use, scalable hyperparameter optimization framework that solves the pain points of hyperparameter search
    "optax",  # Gradient processing and optimization library for JAX
    "jax",
    # Composable transformations of Python+NumPy programs: differentiate, vectorize, JIT to GPU/TPU, and more
    "trax",  # Trax â€” Deep Learning with Clear Code and Speed
    "einops",
    # A more readable and flexible way of working with tensors in PyTorch, TensorFlow, and NumPy
    "thinc",
    # A refreshing functional take on deep learning, compatible with your favorite libraries
    "datasets",
    # A lightweight and extensible library to easily share and access datasets and evaluation metrics, for Machine Learning tasks
    "pytorchvideo",
    # A deep learning library for video understanding research in PyTorch
    "torchaudio",
    # An extension for PyTorch to make it easy to work with audio data
    "pytorch-nlp",
    # Basic utilities for PyTorch Natural Language Processing (NLP)
    "gluoncv",  # A deep learning toolkit for computer vision, built on MXNet
    "gluonnlp",
    # A deep learning toolkit for natural language processing, built on MXNet
    "stanfordnlp",
    # The Stanford NLP Group's official Python library, contains neural network models for many languages
    "deepchem",  # A toolchain for deep learning and chemistry
    "rdkit",  # Open-source cheminformatics
    "biopython",  # Tools for biological computation
    "pymc3",  # Bayesian modeling and probabilistic machine learning with Theano
    "arviz",  # Exploratory analysis of Bayesian models
    "prophet",  # Automatic forecasting procedure developed by Facebook
    "darts",  # Easy manipulation and forecasting of time series
    # Other ones:
    "Pillow",
    "PyWavelets",
    "scipy",
    "networkx",
    "tifffile",
    "numba",
    "scikit-learn",
    "scikit-image",
    "napari",
    "psygnal",
    "numpy",
    "imagecodecs",
    "dask",
    "dask-core",
    "brotlipy",
    "vispy",
    "tqdm",
    "openai",
    "zarr",
    "numcodecs",
    "blosc",
    "imagecodecs",
    "imageio",
    "imagesize",
    "tensorflow",
    "pytorch",
    "mahotas",
    "SimpleITK",
    "matplotlib",
    "pgmagick",
    "xarray",
    "image",
    "magicgui",
    "arbol",
    "tqdm",
    "cupy",
    "cucim",
    "OpenCV",
    "napari-plugin-engine",
    "napari-svg",
    "napari-ndtiffs",
    "napari-ndreg",
    "napari-openslide",
    "napari-aicsimageio",
    "napari-qt-threading",
    "napari-terastitcher",
    "napari-roi",
    "napari-features",
    "napari-ndmeasure",
    "napari-pyclesperanto",
    "napari-nddisplay",
    "napari-ndtiff",
    "napari-ndreg",
    "napari-svg",
    "napari-openslide",
    "napari-aicsimageio",
    "napari-qt-threading",
    "napari-terastitcher",
    "napari-roi",
    "napari-features",
    "napari-ndmeasure",
    "napari-pyclesperanto",
    "napari-nddisplay" "napari-stardist",
    "cellpose-napari",
    "cellpose",
    "stardist",
    "napari-ndtiff",
    "napari-ndreg",
]
